name: Release boardsite-server

on:
  push:
    branches:
      - master
    tags:
      - v*
env:
  IMAGE_NAME: boardsite-server

jobs:
  test:
    name: Vet, format and test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      - name: Download dependencies
        run: go mod download
      - name: Vet files
        run: go vet ./...
      - name: Go mod tidy
        run: |
          go mod tidy
          git diff --exit-code $(git rev-parse HEAD) go.sum go.mod
      - name: Format files
        run: go fmt ./...
      - name: Run unit tests
        run: go test ./... -count=5

  push:
    name: Build and push image to ghcr.io
    runs-on: ubuntu-latest
    needs: test
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup builder
        run: |
          docker buildx create --name boardsite-builder
          docker buildx use boardsite-builder
          docker buildx inspect --bootstrap

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker buildx build . --file Dockerfile --tag $IMAGE_ID:$VERSION --target deploy \
          --platform linux/amd64,linux/arm64/v8 --label "runnumber=${GITHUB_RUN_ID}" --push